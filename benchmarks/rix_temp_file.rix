/*

Rix Standard Library - Default Includes

*/

##external "rsl/RSL_Array.h"
##addsource "rsl/RSL_Array.c"
Array:::BaseType
    $(int Array__size__)
        //virtual

    getObjectAtIndex->Generic_YTYPE$$(int Array__index__)
        //Virtual

    putObjectAtIndex->Generic_YTYPE$$(Generic_$$ Array___index___, Generic_$$ Array__elem__)
        //Virtual
//Done
##external ""
##external "rsl/RSL_String.h"
##addsource "rsl/RSL_String.c"
String::BaseType
    length->int()
        //Virtual
//Done
##external ""
##external "rsl/RSL_Stream.h"
##addsource "rsl/RSL_Stream.c"
Stream::BaseType
    $()
        //virtual

    $(String filename, String mode)
        //virtual

    print->int(String s2)
        //virtual

    print->int(int i2)
        //virtual

    print->int(float f2)
        //virtual

    echo->int(String s2)
        //virtual

    echo->int(int i2)
        //virtual

    echo->int(float f2)
        //virtual

//Done
##external ""
isPrimeThreeOrMore -> bool (int n)
    if (n % 2 == 0)
        -> false

    #upperLimit = n.sqrt() + 1
    #i.for (3, upperLimit, 2)
        if ((n % i) == 0)
            ->false

    -> true

isPrime -> bool(int n) = (n<>2).leg (false, true, isPrimeThreeOrMore(n))

#lim = 2000000
#numPrimes = 0
#n = 0

#i.for (1, lim)
    if (isPrime (i))
        numPrimes += 1

print ("Number of primes in the interval [0,"+lim+"]: "+numPrimes)

