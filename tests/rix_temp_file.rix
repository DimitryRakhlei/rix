/*

Rix Standard Library - Default Includes

*/

##external "rsl/RSL_Array.h"
##addsource "rsl/RSL_Array.c"
Array:::BaseType
    $(int Array__size__)
        //virtual

    getObjectAtIndex->Generic_YTYPE$$(int Array__index__)
        //Virtual

    putObjectAtIndex->Generic_YTYPE$$(Generic_$$ Array___index___, Generic_$$ Array__elem__)
        //Virtual
//Done
##external ""
##external "rsl/RSL_String.h"
##addsource "rsl/RSL_String.c"
String::BaseType
    length->int()
        //Virtual
//Done
##external ""
##external "rsl/RSL_Stream.h"
##addsource "rsl/RSL_Stream.c"
Stream::BaseType
    $()
        //virtual

    $(String filename, String mode)
        //virtual

    print->int(String s2)
        //virtual

    print->int(int i2)
        //virtual

    print->int(float f2)
        //virtual

    echo->int(String s2)
        //virtual

    echo->int(int i2)
        //virtual

    echo->int(float f2)
        //virtual

//Done
##external ""
/*

Rix Standard Library

*/
##external "rsl/RSL_Vector.h"
##addsource "rsl/RSL_Vector.c"
Vector::BaseType
    $(int Vector__size__)
        //virtual

    length->int()
            //Virtual

    capacity->int()
            //Virtual

    getObjectAtIndex->Generic_YTYPE$$(int Vector__index__)
        //Virtual

    putObjectAtIndex->Generic_YTYPE$$(Generic_$$ Vector___index___, Generic_$$ Vector__elem__)
        //Virtual

    isNull->bool(int index)
        //Virtual

//Done
##external ""


printSpaceLeft->String(Vector v)
    -> (v.length() + "/" + v.capacity())


#a = Vector{String}(100)
#i.for (0,10)
    a[i] = "i = " + i + " -> " + (i+2).sqrt()

i.for (4,9)
    print (a[i])

print ("a is " + printSpaceLeft(a))

if (a.isNull(9))
    print ("No element at index 9")
else
    print ("Element exists at index 9")


#b = Vector{int}(100)
i.for (0,8)
    b[i] = i

i.for (4,9)
    print (b[i])

print ("b is " + printSpaceLeft(b))

if (b.isNull(9))
    print ("No element at index 9")
else
    print ("Element exists at index 9")
